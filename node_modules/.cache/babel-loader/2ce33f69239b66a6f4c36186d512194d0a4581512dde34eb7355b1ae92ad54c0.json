{"ast":null,"code":"var _jsxFileName = \"D:\\\\ups\\\\src\\\\pages\\\\google\\\\google.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyB7J317dmnQQTWhuIh3BvT8XjmHefwHlKw\" // Replace with your Google Maps API key\n  });\n\n  const center = {\n    lat: 18.52043,\n    lng: 73.856743\n  };\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Define the API endpoint URL\n    const apiUrl = 'https://api.example.com/data'; // Replace with your API endpoint URL\n\n    if (isLoaded) {\n      fetch(apiUrl).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(data => {\n        setData(data);\n        setLoading(false);\n      }).catch(error => {\n        setError(error);\n        setLoading(false);\n      });\n    }\n  }, [isLoaded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !isLoaded ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerClassName: \"map-container\",\n      center: center,\n      zoom: 10,\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        position: center,\n        icon: {\n          url: \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\",\n          scaledSize: new window.google.maps.Size(50, 50) // Adjust size as needed\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8YJ92YIXOdbpaBpgPXr0Bcad3k4=\", false, function () {\n  return [useLoadScript];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","Marker","useLoadScript","jsxDEV","_jsxDEV","App","_s","isLoaded","googleMapsApiKey","center","lat","lng","data","setData","loading","setLoading","error","setError","apiUrl","fetch","then","response","ok","Error","json","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerClassName","zoom","position","icon","url","scaledSize","window","google","maps","Size","_c","$RefreshReg$"],"sources":["D:/ups/src/pages/google/google.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\r\n\r\nconst App = () => {\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyB7J317dmnQQTWhuIh3BvT8XjmHefwHlKw\" // Replace with your Google Maps API key\r\n  });\r\n\r\n  const center = { lat: 18.52043, lng: 73.856743 };\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Define the API endpoint URL\r\n    const apiUrl = 'https://api.example.com/data'; // Replace with your API endpoint URL\r\n\r\n    if (isLoaded) {\r\n      fetch(apiUrl)\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          setData(data);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          setError(error);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [isLoaded]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!isLoaded ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <GoogleMap\r\n          mapContainerClassName=\"map-container\"\r\n          center={center}\r\n          zoom={10}\r\n        >\r\n          <Marker\r\n            position={center}\r\n            icon={{\r\n              url: \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\",\r\n              scaledSize: new window.google.maps.Size(50, 50), // Adjust size as needed\r\n            }}\r\n          />\r\n        </GoogleMap>\r\n      )}\r\n      {/* {loading ? (\r\n        <p>Loading data...</p>\r\n      ) : error ? (\r\n        <p>Error: {error.message}</p>\r\n      ) : (\r\n        <ul>\r\n          {data.map((item) => (\r\n            <li key={item.id}>{item.name}</li>\r\n            // Modify this to match the structure of your API response\r\n          )}\r\n        </ul>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,MAAM,EAAEC,aAAa,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAS,CAAC,GAAGL,aAAa,CAAC;IACjCM,gBAAgB,EAAE,yCAAyC,CAAC;EAC9D,CAAC,CAAC;;EAEF,MAAMC,MAAM,GAAG;IAAEC,GAAG,EAAE,QAAQ;IAAEC,GAAG,EAAE;EAAU,CAAC;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMoB,MAAM,GAAG,8BAA8B,CAAC,CAAC;;IAE/C,IAAIX,QAAQ,EAAE;MACZY,KAAK,CAACD,MAAM,CAAC,CACVE,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACxB,CAAC,CAAC,CACDJ,IAAI,CAAER,IAAI,IAAK;QACdC,OAAO,CAACD,IAAI,CAAC;QACbG,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,CACDU,KAAK,CAAET,KAAK,IAAK;QAChBC,QAAQ,CAACD,KAAK,CAAC;QACfD,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjB,CAACpB,QAAQ,gBACRH,OAAA;MAAAuB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEnB3B,OAAA,CAACJ,SAAS;MACRgC,qBAAqB,EAAC,eAAe;MACrCvB,MAAM,EAAEA,MAAO;MACfwB,IAAI,EAAE,EAAG;MAAAN,QAAA,eAETvB,OAAA,CAACH,MAAM;QACLiC,QAAQ,EAAEzB,MAAO;QACjB0B,IAAI,EAAE;UACJC,GAAG,EAAE,wDAAwD;UAC7DC,UAAU,EAAE,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAE;QACnD;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EACZ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAaE,CAAC;AAEV,CAAC;AAACzB,EAAA,CAlEID,GAAG;EAAA,QACcH,aAAa;AAAA;AAAAwC,EAAA,GAD9BrC,GAAG;AAoET,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}